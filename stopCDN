#!/usr/bin/python3

import os
import argparse


def main():
    parser = argparse.ArgumentParser(description='Start CDN')
    parser.add_argument('-p', type=int, required=True, metavar='port')
    parser.add_argument('-o', type=str, required=True, metavar='origin')
    parser.add_argument('-n', type=str, required=True, metavar='name')
    parser.add_argument('-u', type=str, required=True, metavar='username')
    parser.add_argument('-i', type=str, required=True, metavar='keyfile')

    args = parser.parse_args()

    dns_node = "p5-dns.5700.network"

    try:
        host_file = open("dns-hosts.txt")
        replica_servers = []
        for line in host_file.readlines():
            replica_servers.append(line.strip())
        host_file.close()
    except:
        replica_servers = ["p5-http-a.5700.network", "p5-http-b.5700.network", "p5-http-c.5700.network",
                           "p5-http-d.5700.network", "p5-http-e.5700.network", "p5-http-f.5700.network",
                           "p5-http-g.5700.network"]

    try:
        ssh_command = 'ssh -i {} {}@{} "killall -9 -u {} /usr/bin/python3"'.format(args.i, args.u, dns_node, args.u)
        os.system(ssh_command)
        print("DNS closed.")
    except:
        print("DNS not running.")

    for replica in replica_servers:
        try:
            ssh_command = 'ssh -i {} {}@{} "killall -9 -u {} /usr/bin/python3"'.format(args.i, args.u, replica, args.u)
            os.system(ssh_command)
            print(replica + " closed.")
        except:
            print(replica + " not running.")


main()
